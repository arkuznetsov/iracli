// ----------------------------------------------------------
// This Source Code Form is subject to the terms of the
// Mozilla Public License, v.2.0. If a copy of the MPL
// was not distributed with this file, You can obtain one
// at http://mozilla.org/MPL/2.0/.
// ----------------------------------------------------------
// Codebase: https://github.com/ArKuznetsov/iracli/
// ----------------------------------------------------------

Перем ПулПодключений;

#Область ПрограммныйИнтерфейс

Процедура Инициализировать() Экспорт

	ВремПул = Новый Массив();

	ОписаниеПодключения = Новый Структура();
	ОписаниеПодключения.Вставить("Ид"              , 0);
	ОписаниеПодключения.Вставить("Подключение"     , Неопределено);
	ОписаниеПодключения.Вставить("Заблокировано"   , Ложь);
	ОписаниеПодключения.Вставить("НачалоБлокировки", 0);
		
	ВремПул.Добавить(ОписаниеПодключения);

	ПулПодключений = Новый ФиксированныйМассив(ВремПул);

КонецПроцедуры // Инициализировать()

Функция ПустойОбъектКластера(Знач ТипОбъекта, Знач Поля = "_all") Экспорт

	Поля = ОбщегоНазначения.СписокПолей(Поля);

	ПоляОбъекта = ТипыОбъектовКластера.СвойстваОбъекта(ТипОбъекта);
	ПоляОбъекта.Добавить(Новый Структура("Имя, ИмяРАК, Основное, Тип, ПоУмолчанию", "Количество", "count", Истина, "Число", 0));

	Если ВРег(ТипОбъекта) = ВРег(ТипыОбъектовКластера().РабочиеПроцессы)
	 ИЛИ ВРег(ТипОбъекта) = ВРег(ТипыОбъектовКластера().Сеансы)
	 ИЛИ ВРег(ТипОбъекта) = ВРег(ТипыОбъектовКластера().Соединения) Тогда
		ПоляОбъекта.Добавить(Новый Структура("Имя, ИмяРАК, Основное, Тип, ПоУмолчанию", "Длительность", "duration", Истина, "Число", 0));
	КонецЕсли;

	ПустойОбъект = Новый Соответствие();
	ПустойОбъект.Вставить("empty", Истина);

	Для й = 0 По ПоляОбъекта.ВГраница() Цикл
			
		ТекПолеОбъекта = ПоляОбъекта[й];

		Если Поля.Найти(ВРег(ТекПолеОбъекта.ИмяРАК)) = Неопределено И Поля.Найти("_ALL") = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		ЗначениеПоля = Неопределено;

		Если ВРег(ТекПолеОбъекта.Тип) = "ЧИСЛО" Тогда
			ЗначениеПоля = 0;
		ИначеЕсли ВРег(ТекПолеОбъекта.Тип) = "ДАТА" Тогда
			ЗначениеПоля = Дата(1, 1, 1, 0, 0, 0);
		КонецЕсли;

		ПустойОбъект.Вставить(ТекПолеОбъекта.ИмяРАК, ЗначениеПоля);
	КонецЦикла;

	Возврат ПустойОбъект;

КонецФункции // ПустойОбъектКластера()

Функция ОбъектыКластера(Знач ТипОбъекта, Знач Обновить = Ложь, Знач Поля = "_all", Знач Фильтр = Неопределено) Экспорт

	ОписаниеПодключения = ОписаниеПодключенияКАгенту();

	ОбъектыКластера = Неопределено;

	Попытка
		ОбъектыКластера = ОписаниеПодключения.Подключение.ОписанияОбъектовКластера(ТипОбъекта, Обновить, Поля, Фильтр);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Сообщить(СтрШаблон("При обновлении объектов ""%1"" возникла ошибка: %2%3", ТипОбъекта, Символы.ПС, ТекстОшибки),
		         СтатусСообщения.ОченьВажное);
	КонецПопытки;

	ОсвободитьПодключение(ОписаниеПодключения);

	Возврат ОбъектыКластера;

КонецФункции // ОбъектыКластера()

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ОписаниеПодключенияКАгенту()

	Если НЕ ТипЗнч(ПулПодключений) = Тип("ФиксированныйМассив") ИЛИ ПулПодключений.Количество() = 0 Тогда
		Инициализировать();
	КонецЕсли;

	ТекОписание = ПулПодключений[0];

	ТекОписание.Заблокировано    = Истина;
	ТекОписание.НачалоБлокировки = ТекущаяУниверсальнаяДатаВМиллисекундах();

	Если ТекОписание.Подключение = Неопределено Тогда
		ТекОписание.Подключение = Новый ПодключениеКАгентам();
	КонецЕсли;

	Возврат ТекОписание;

КонецФункции // ОписаниеПодключенияКАгенту()

Процедура ОсвободитьПодключение(ОписаниеПодключения)

	ОписаниеПодключения.Заблокировано    = Ложь;
	ОписаниеПодключения.НачалоБлокировки = 0;

КонецПроцедуры // ОсвободитьПодключение()

Функция ТипыОбъектовКластера()

	Возврат Перечисления.РежимыАдминистрирования;

КонецФункции // ТипыОбъектовКластера()

#КонецОбласти // СлужебныеПроцедурыИФункции

Инициализировать();