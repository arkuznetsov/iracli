///////////////////////////////////////////////////////////////////
//
#Использовать "."
#Использовать irac
#Использовать cli
#Использовать tempfiles

Перем Лог;     // Объект       - объект записи лога приложения

///////////////////////////////////////////////////////////////////////////////

Процедура ВыполнитьПриложение()

	Приложение = Новый КонсольноеПриложение(ПараметрыПриложения.ИмяПриложения(),
	                                        "приложение для загрузки и подготовки релизов 1С");
	Приложение.Версия("version", ПараметрыПриложения.Версия());

	ОбъектКоманды = Новый КомандаОбъектыКластера(Перечисления.РежимыАдминистрирования.Кластеры);
	Приложение.ДобавитьКоманду("cluster c", "получение информации о кластерах 1С", ОбъектКоманды);

	ОбъектКоманды = Новый КомандаОбъектыКластера(Перечисления.РежимыАдминистрирования.Серверы);
	Приложение.ДобавитьКоманду("server s", "получение информации о серверах 1С", ОбъектКоманды);
	
	ОбъектКоманды = Новый КомандаОбъектыКластера(Перечисления.РежимыАдминистрирования.РабочиеПроцессы);
	Приложение.ДобавитьКоманду("process p", "получение информации о рабочих процессах 1С", ОбъектКоманды);
	
	ОбъектКоманды = Новый КомандаОбъектыКластера(Перечисления.РежимыАдминистрирования.ИнформационныеБазы);
	Приложение.ДобавитьКоманду("infobase i", "получение информации об информационных базах 1С", ОбъектКоманды);
	
	ОбъектКоманды = Новый КомандаОбъектыКластера(Перечисления.РежимыАдминистрирования.Сеансы);
	Приложение.ДобавитьКоманду("session ss" , "получение информации о сеансах 1С", ОбъектКоманды);
	
	ОбъектКоманды = Новый КомандаОбъектыКластера(Перечисления.РежимыАдминистрирования.Соединения);
	Приложение.ДобавитьКоманду("connection cc" , "получение информации о соединениях 1С", ОбъектКоманды);
	
	ОбъектКоманды = Новый КомандаДампСостоянияКластера();
	Приложение.ДобавитьКоманду("dump d" , "сохранение состояния кластера 1С в каталог", ОбъектКоманды);
	
	Приложение.Опция("v verbose", Ложь, "вывод отладочной информации в процессе выполнения")
	          .Флаговый()
	          .ВОкружении("IRAC_VERBOSE");

	Приложение.Опция("s settings", "", "путь к файлу настроек (по умолчанию: ../config/rasettings.json)")
	          .ТСтрока()
	          .ВОкружении("IRAC_SETTINGS");

	Приложение.Опция("c cache", "", "путь к каталогу для сохранения кэша объектов (по умолчанию: ../cache/)")
	          .ТСтрока()
	          .ВОкружении("IRAC_CACHE");

	Приложение.Опция("au agent-user", "", "администратор агента кластера 1С")
	          .ТСтрока()
	          .ВОкружении("IRAC_AGENT_USER");

	Приложение.Опция("ap agent-pwd", "", "пароль администратора агента кластера 1С")
	          .ТСтрока()
	          .ВОкружении("IRAC_AGENT_PWD");

	Приложение.Опция("cu cluster-user", "", "администратор кластера 1С")
	          .ТСтрока()
	          .ВОкружении("IRAC_CLUSTER_USER");

	Приложение.Опция("cp cluster-pwd", "", "пароль администратора кластера 1С")
	          .ТСтрока()
	          .ВОкружении("IRAC_CLUSTER_PWD");

	Приложение.Запустить(АргументыКоманднойСтроки);
	
КонецПроцедуры // ВыполнитьПриложение()

// Функция - проверяет, что приложение запущено в режиме тестирования
//
// Возвращаемое значение:
//   Булево  - Истина - приложение запущено в режиме тестирования
//
Функция ЭтоТест()
	
	Попытка
		Возврат ЭтотОбъект.ЭтоТест;
	Исключение
		Возврат Ложь;
	КонецПопытки;

КонецФункции // ЭтоТест()

///////////////////////////////////////////////////////

Лог = ПараметрыПриложения.Лог();

Попытка

	ВыполнитьПриложение();

Исключение

	Лог.КритичнаяОшибка(ОписаниеОшибки());
	ВременныеФайлы.Удалить();

	Если ЭтоТест() Тогда
		ВызватьИсключение ОписаниеОшибки();
	Иначе
		ЗавершитьРаботу(1);
	КонецЕсли;

КонецПопытки;
